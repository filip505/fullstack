{"version":3,"sources":["../src/worker.js"],"names":["Worker","start","time","updateLocaton","then","setTimeout","drivers","driver","location","randopeep","address","geo","JSON","stringify","console","log"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,MAAMA,MAAN,CAAa;AAETC,EAAAA,KAAK,CAACC,IAAD,EAAO;AACR,SAAKC,aAAL,GAAqBC,IAArB,CAA0B,MAAM;AAC5BC,MAAAA,UAAU,CAAC,MAAM,KAAKJ,KAAL,CAAWC,IAAX,CAAP,EAAyBA,IAAzB,CAAV;AACH,KAFD;AAIH;;AAED,QAAMC,aAAN,GAAsB;AAClB,UAAMG,OAAO,GAAG,MAAM,qBAAtB;;AACA,SAAK,IAAIC,MAAT,IAAmBD,OAAnB,EAA4B;AACxBC,MAAAA,MAAM,CAACC,QAAP,GAAkBC,mBAAUC,OAAV,CAAkBC,GAAlB,EAAlB;AACH;;AACD,UAAM,yBAAU,kBAAV,EAA8BC,IAAI,CAACC,SAAL,CAAeP,OAAf,CAA9B,CAAN;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH;;AAhBQ;;eAmBEf,M","sourcesContent":["import { getDrivers } from \"./database/db\"\nimport randopeep from 'randopeep'\nimport { writeFile } from './helper/fileSync.helper'\n\nclass Worker {\n\n    start(time) {\n        this.updateLocaton().then(() => {\n            setTimeout(() => this.start(time), time)\n        })\n\n    }\n\n    async updateLocaton() {\n        const drivers = await getDrivers()\n        for (let driver of drivers) {\n            driver.location = randopeep.address.geo()\n        }\n        await writeFile(\"./index.get.json\", JSON.stringify(drivers));\n        console.log('change')\n    }\n}\n\nexport default Worker"],"file":"worker.js"}