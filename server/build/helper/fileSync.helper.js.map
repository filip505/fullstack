{"version":3,"sources":["../../src/helper/fileSync.helper.js"],"names":["readFile","uri","format","Promise","resolve","reject","fs","err","data","writeFile","file"],"mappings":";;;;;;;AAAA;;;;AAEA,MAAMA,QAAQ,GAAG,CAACC,GAAD,EAAMC,MAAN,KAAiB,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACjEC,cAAGN,QAAH,CAAYC,GAAZ,EAAiBC,MAAjB,EAAyB,CAACK,GAAD,EAAMC,IAAN,KAAe;AACtC,QAAID,GAAJ,EACEF,MAAM,CAACE,GAAD,CAAN;AACFH,IAAAA,OAAO,CAACI,IAAD,CAAP;AACD,GAJD;AAKD,CANiC,CAAlC;;;;AAQA,MAAMC,SAAS,GAAG,CAACR,GAAD,EAAMS,IAAN,KAAe,IAAIP,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAChEC,cAAGG,SAAH,CAAaR,GAAb,EAAkBS,IAAlB,EAAyBH,GAAD,IAAS;AAC/B,QAAIA,GAAJ,EACEF,MAAM,CAACE,GAAD,CAAN;AACFH,IAAAA,OAAO;AACR,GAJD;AAKD,CANgC,CAAjC","sourcesContent":["import fs from 'fs';\n\nconst readFile = (uri, format) => new Promise((resolve, reject) => {\n  fs.readFile(uri, format, (err, data) => {\n    if (err)\n      reject(err)\n    resolve(data)\n  })\n})\n\nconst writeFile = (uri, file) => new Promise((resolve, reject) => {\n  fs.writeFile(uri, file, (err) => {\n    if (err)\n      reject(err)\n    resolve()\n  });\n})\n\n\nexport { readFile, writeFile }"],"file":"fileSync.helper.js"}