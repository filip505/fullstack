{"version":3,"sources":["../src/server.js"],"names":["PORT","process","env","server","Promise","resolve","reject","app","Koa","http","createServer","callback","webSockets","WebSockets","worker","Worker","start","use","driverController","routes","listen","console","log"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAPA;AAQA,MAAMA,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,GAAmBC,OAAO,CAACC,GAAR,CAAYF,IAA/B,GAAsC,IAAnD;;AAEA,MAAMG,MAAM,GAAG,MAAM,IAAIC,OAAJ,CAAY,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AAE1D;AACA,QAAMC,GAAG,GAAG,IAAIC,YAAJ,EAAZ;;AACA,QAAML,MAAM,GAAGM,cAAKC,YAAL,CAAkBH,GAAG,CAACI,QAAJ,EAAlB,CAAf;;AACA,QAAMC,UAAU,GAAG,IAAIC,mBAAJ,CAAe;AAAEV,IAAAA;AAAF,GAAf,CAAnB;AACA,QAAMW,MAAM,GAAG,IAAIC,eAAJ,EAAf;AACAD,EAAAA,MAAM,CAACE,KAAP,CAAa,IAAb;AAEAT,EAAAA,GAAG,CAACU,GAAJ,CAAQ,uBAAR;AACAV,EAAAA,GAAG,CAACU,GAAJ,CAAQ,6BAAR;AACAV,EAAAA,GAAG,CAACU,GAAJ,CAAQC,gBAAiBC,MAAjB,EAAR;AACAhB,EAAAA,MAAM,CAACiB,MAAP,CAAcpB,IAAd,EAAoB,MAAM;AACxBqB,IAAAA,OAAO,CAACC,GAAR,CAAa,qBAAoBtB,IAAK,EAAtC;AACAK,IAAAA,OAAO,CAACF,MAAD,CAAP;AACD,GAHD;AAKD,CAjBoB,CAArB;;eAmBeA,M","sourcesContent":["import Koa from 'koa'\nimport bodyParser from 'koa-bodyparser'\n// import { PORT } from './env'\nimport Router from 'koa-router'\nimport driverController from './controller/driver.controller'\nimport { createFixtures } from './database/fixtures'\nimport http from 'http'\nimport WebSockets from './websockets'\nimport cors from 'koa-cors'\nimport Worker from './worker'\nconst PORT = process.env.PORT ? process.env.PORT : 3000\n\nconst server = () => new Promise(async (resolve, reject) => {\n\n  // await createFixtures()\n  const app = new Koa()\n  const server = http.createServer(app.callback())\n  const webSockets = new WebSockets({ server })\n  const worker = new Worker()\n  worker.start(1000)\n\n  app.use(cors())\n  app.use(bodyParser())\n  app.use(driverController.routes())\n  server.listen(PORT, () => {\n    console.log(`listening on port ${PORT}`);\n    resolve(server)\n  })\n\n})\n\nexport default server"],"file":"server.js"}