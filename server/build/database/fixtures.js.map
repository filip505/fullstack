{"version":3,"sources":["../../src/database/fixtures.js"],"names":["createUser","file","list","JSON","parse","data","id","uuid","v1","driverName","randopeep","name","driverCityOrigin","address","city","driverLanguage","Math","floor","random","driverPhone","phone","driverGender","driverInfo","corporate","catchPhrase","carMake","kmDriven","location","geo","push","stringify","deleteFixtures","createFixtures","i"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEO,MAAMA,UAAU,GAAG,YAAY;AACpC,QAAMC,IAAI,GAAG,MAAM,wBAAS,kBAAT,EAA6B,MAA7B,CAAnB;AACA,MAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAX;AACA,MAAII,IAAI,GAAG;AACTC,IAAAA,EAAE,EAAEC,cAAKC,EAAL,EADK;AAETC,IAAAA,UAAU,EAAEC,mBAAUC,IAAV,EAFH;AAGTC,IAAAA,gBAAgB,EAAEF,mBAAUG,OAAV,CAAkBC,IAAlB,EAHT;AAITC,IAAAA,cAAc,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqCC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAArC,CAJP;AAKTC,IAAAA,WAAW,EAAET,mBAAUG,OAAV,CAAkBO,KAAlB,EALJ;AAMTC,IAAAA,YAAY,EAAE,CAAC,MAAD,EAAS,QAAT,EAAmBL,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAnB,CANL;AAOTI,IAAAA,UAAU,EAAEZ,mBAAUa,SAAV,CAAoBC,WAApB,CAAgC,CAAhC,CAPH;AAQTC,IAAAA,OAAO,EAAEf,mBAAUa,SAAV,CAAoBZ,IAApB,CAAyB,OAAzB,EAAkC,CAAlC,CARA;AASTe,IAAAA,QAAQ,EAAEV,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,MAA3B,CATD;AAUTS,IAAAA,QAAQ,EAAEjB,mBAAUG,OAAV,CAAkBe,GAAlB;AAVD,GAAX;AAYA1B,EAAAA,IAAI,CAAC2B,IAAL,CAAUxB,IAAV;AACA,QAAM,yBAAU,kBAAV,EAA8BF,IAAI,CAAC2B,SAAL,CAAe5B,IAAf,CAA9B,CAAN;AACA,SAAOG,IAAP;AACD,CAlBM;;;;AAoBA,MAAM0B,cAAc,GAAG,YAAY;AACxC,QAAM,yBAAU,kBAAV,EAA8B5B,IAAI,CAAC2B,SAAL,CAAe,EAAf,CAA9B,CAAN;AACD,CAFM;;;;AAIA,MAAME,cAAc,GAAG,YAAY;AACxC,QAAMD,cAAc,EAApB,CADwC,CAExC;;AACA,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,UAAMjC,UAAU,EAAhB;AACD;AACF,CANM","sourcesContent":["import randopeep from 'randopeep'\nimport { writeFile, readFile } from '../helper/fileSync.helper'\nimport uuid from 'uuid'\n\nexport const createUser = async () => {\n  const file = await readFile('./index.get.json', 'utf8')\n  var list = JSON.parse(file)\n  var data = {\n    id: uuid.v1(),\n    driverName: randopeep.name(),\n    driverCityOrigin: randopeep.address.city(),\n    driverLanguage: ['de', 'en', 'nl', 'fr', 'es', 'ar'][Math.floor(Math.random() * 7)],\n    driverPhone: randopeep.address.phone(),\n    driverGender: ['male', 'female'][Math.floor(Math.random() * 2)],\n    driverInfo: randopeep.corporate.catchPhrase(0),\n    carMake: randopeep.corporate.name('large', 0),\n    kmDriven: Math.floor(Math.random() * 100000),\n    location: randopeep.address.geo()\n  }\n  list.push(data);\n  await writeFile(\"./index.get.json\", JSON.stringify(list));\n  return data\n}\n\nexport const deleteFixtures = async () => {\n  await writeFile(\"./index.get.json\", JSON.stringify([]));\n}\n\nexport const createFixtures = async () => {\n  await deleteFixtures()\n  // mock 10 users\n  for (let i = 0; i < 10; i++) {\n    await createUser()\n  }\n}\n"],"file":"fixtures.js"}